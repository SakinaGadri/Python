
setup|chromosome|Chromosome()
chromosome.set_by_pos(45, 'AT')|'testing the setter function for position'|
chromosome.get_by_pos(45)|'now that we have set a chromosome at a position, we can test the getter method by getting the chromosome at that position'|'AT'
chromosome.set_marker('marker_set', 45)|'testing with a position that has a chromosome set to it'|
chromosome.set_marker('marker1', 15)|'testing if the function sets the marker properly when the position does not have a chromosome value set to it'|
chromosome.set_marker('marker2', 16)|'checking if works the same way twice in a row'|
chromosome.get_markers()|'checking if all of them have been set properly'|{'marker_set': ['A', 'T'], 'marker1': [], 'marker2': []}
chromosome.set_by_marker('marker_set', 'new')|'assigning a value to marker_set which has a chromosome value set'|
chromosome.set_by_marker('marker1', 'set')|'assigning a value to marker1 which does not have any value set'|
chromosome.get_by_marker('marker_set')|'checking if it removes the previous values and assigns the new one; if done correctly, this should return 'new' instead of AT'|'new'
chromosome.get_by_marker('marker1')|'checking if the new value is correctly append; if done correctly, this should return set instead of any empty list'|'set'
chromosome.set_by_pos(15, 'IWOrk')|'changing the value of a chromosome using position to see if it works'|
chromosome.get_by_pos(15)|'checking if the value at chromosome 15 changed from set to IWork'|'IWork'
chromosome.get_by_marker('marker1')|'does the marker which is linked to 15 also give you IWork'|'IWork'
chromosome.get_nucleotides()|'returns the nucleotide dictionary that has positions 45, 15 and 16 mapped to their respective nucleotides'|{45: ['n', 'e', 'w'], 15,: ['I', 'W', 'o', 'r', 'k'], 16:[]}
chromosome.get_markers()|{'marker_set': ['n', 'e', 'w'], 'marker1': ['I', 'W', 'o', 'r', 'k'], 'marker2': []}


setup|cell|Cell()
cell.set_by_pos(23, 15, 'AT')|'testing if the setter function is working properly'|
cell.get_by_pos(23, 15)|'did the setter function set the chromosome right? is the getter function producing the right output'|AT
cell.get_pairs_dict()|'check if the dictionary is properly set: we have nested dictionary where pair is mapping to position is mapping to chromosome'|{23:{15:['A', 'T']}}
(cell.get_markers_dict()|'check if the marker's dict is properly set; should return an empty dictionary'|{}
cell.set_marker('marker1', 23, 15)|'checking if the marker is properly linked to the pair-position's nucleotide'|
cell.get_pairs_dict()|'checking if the pair dict hasn't been altered in anyway'|{23:{15:['A', 'T']}}
cell.get_markers_dict()|'checking if the markers dict has the new marker in it'|{'marker1': ['A', 'T']}
cell.set_marker('marker2', 12, 15)|'does it still work fine if the pair-position is not set?'|
cell.get_pairs_dict()|'moment of truth: has the pair dict altered?'|{23:{15:['A', 'T']}, 12:{15: []}}
cell.get_markers_dict()|'aha! has this been altered?'|{'marker1': ['A', 'T'], 'marker2': []}
cell.set_by_marker('marker1', 'CG')|'does the marker change the previous chromosome that has been set?'|
cell.get_pairs_dict()|'let's check if it also changes at the pair-position it has been linked to'|{23:{15:['C', 'G']}, 12:{15: []}}
cell.get_markers_dict()|'has the marker dict changed?'|{'marker1': ['C', 'G'], 'marker2': []}
cell.get_by_marker('marker1')|'this should return CG, if the getter method has been properly set'|'CG'
setup|chromosome|cell.get_chromosome(23)|'this should get all the chromosomes at the given pair'|{15: at}
cell.set_chromosome(7, c)|'this should link the chromosomes stored in ~chromosome~ to 7'|


setup|binder|Binder()
binder.set_sex('F')|'sets the gender to be Female'|
binder.get_sex()|'this gets the gender that has been set'|'F'
binder.set_by_pos(12, 45, 'LM')|'checking if the inhertiance is properly set; this should set the chromosome at 12-45 to be LM'|
binder.get_by_pos(12, 45)|'if the inhertiance is properly set and the setter function works, this should return LM'|'LM'
binder.set_marker('marker1', 14, 17)|'This should link the marker to the chromosome at 14-17'|
binder.get_markers_dict()|'This should have added the marker to the dictionary'|{'marker1': []}
binder.get_pairs_dict()|'this should have 2 sets of dictionaries within them'|{12: {45: ['L', 'M']}, 14: {17: []}}
binder.set_by_marker('marker1', 'RM')|'this should set the marker to be RM and also alter 14-17's chromosome'|
binder.get_by_marker('marker1')|'did the marker set the chromosome properly?'|'RM'
binder.get_by_pos(14, 17)|'was the link strong enough to hold the change of the chromosome by marker?'|'RM'


setup|query|Query()
query.set_by_pos(12, 1, 'AT')|'if the inheritance is proper, then this setter method should work properly'|
query.get_by_pos(12, 1)|'checking the setter method using the getter method, lol'|'AT'
query.set_marker('marker1', 3, 8)|'this should link the marker to the chromosome at 3-8'|
query.set_by_marker('marker1', 'Bii')|'setting the marker to be equal to a chromosome'|
query.get_by_marker('marker1')|'If the setter did its work, the getter should be getting'|'Bii'
query.get_pairs_dict()|'this should have 2 sets of dictionaries: 12-1, 3-8'|{12: {1: ['A', 'T']}, 3: {8: ['B', 'i', 'i']}}
query.get_markers_dict()|'this should have only one marker which should be mapped to the same chromosome as 3-8'|{'marker1': ['B', 'i', 'i']}
query.set_marker('marker2', 12, 1)|'linking the marker to 12-1 such that changing either one of them would change the chromosome at both ends'|
query.set_by_marker('marker2', 'Hii')|'12-1 has a chromosome set at it; can this setter method change the chromosome?'|
query.get_by_marker('marker2')|'will this return hii? It should if the setter method worked fine'|'Hii'
query.get_pairs_dict()|'the pair dict should have been altered by the previous functions'|{12: {1: ['H', 'i', 'i']}, 3: {8: ['B', 'i', 'i']}}
query.get_markers_dict()|'the marker dict should have been altered'|{'marker1': ['B', 'i', 'i'], 'marker2':['H', 'i', 'i']}


setup|animal|Animal('***')
setup|animal_2|Animal('-/-/-')
animal.set_by_pos(12, 1, 'AT')|'if the inheritance is proper, then this setter method should work properly'|
animal.get_by_pos(12, 1)|'checking the setter method using the getter method, lol'|'AT'
animal.set_marker('marker1', 3, 8)|'this should link the marker to the chromosome at 3-8'|
animal.set_by_marker('marker1', 'Bii')|'setting the marker to be equal to a chromosome'|
animal.get_by_marker('marker1')|'If the setter did its work, the getter should be getting'|'Bii'
animal.get_pairs_dict()|'this should have 2 sets of dictionaries: 12-1, 3-8'|{12: {1: ['A', 'T']}, 3: {8: ['B', 'i', 'i']}}
animal.get_markers_dict()|'this should have only one marker which should be mapped to the same chromosome as 3-8'|{'marker1': ['B', 'i', 'i']}
animal.set_marker('marker2', 12, 1)|'linking the marker to 12-1 such that changing either one of them would change the chromosome at both ends'|
animal.set_by_marker('marker2', 'Hii')|'12-1 has a chromosome set at it; can this setter method change the chromosome?'|
animal.get_by_marker('marker2')|'will this return hii? It should if the setter method worked fine'|'Hii'
animal.get_pairs_dict()|'the pair dict should have been altered by the previous functions'|{12: {1: ['H', 'i', 'i']}, 3: {8: ['B', 'i', 'i']}}
animal.get_markers_dict()|'the marker dict should have been altered'|{'marker1': ['B', 'i', 'i'], 'marker2':['H', 'i', 'i']}
animal.get_client_id()|'this should return the client id'|'***'
animal.set_client_id('+++')|'this should reset the client id to the one that is input'|'+++'
setup|query|Query()
query.set_by_pos(12, 1, 'AT')|'if the inheritance is proper, then this setter method should work properly'|
animal.test(query)|'this should return none because the function doesn't compute anything'|
setup|binder|Binder()
binder.set_sex('F')|'sets the gender to be Female'|
animal.procreate(animal_2, binder)|'this should return none because the function doesn't compute anything'|


setup|human|Human('***')
setup|human_2|Human('-/-/-')
human.set_by_pos(12, 1, 'AT')|'if the inheritance is proper, then this setter method should work properly'|
human.get_by_pos(12, 1)|'checking the setter method using the getter method, lol'|'AT'
human.set_marker('marker1', 3, 8)|'this should link the marker to the chromosome at 3-8'|
human.set_by_marker('marker1', 'Bii')|'setting the marker to be equal to a chromosome'|
human.get_by_marker('marker1')|'If the setter did its work, the getter should be getting'|'Bii'
human.get_pairs_dict()|'this should have 2 sets of dictionaries: 12-1, 3-8'|{12: {1: ['A', 'T']}, 3: {8: ['B', 'i', 'i']}}
human.get_markers_dict()|'this should have only one marker which should be mapped to the same chromosome as 3-8'|{'marker1': ['B', 'i', 'i']}
human.set_marker('marker2', 12, 1)|'linking the marker to 12-1 such that changing either one of them would change the chromosome at both ends'|
human.set_by_marker('marker2', 'Hii')|'12-1 has a chromosome set at it; can this setter method change the chromosome?'|
human.get_by_marker('marker2')|'will this return hii? It should if the setter method worked fine'|'Hii'
human.get_pairs_dict()|'the pair dict should have been altered by the previous functions'|{12: {1: ['H', 'i', 'i']}, 3: {8: ['B', 'i', 'i']}}
human.get_markers_dict()|'the marker dict should have been altered'|{'marker1': ['B', 'i', 'i'], 'marker2':['H', 'i', 'i']}
human.get_client_id()|'this should return the client id'|'***'
human.set_client_id('+++')|'this should reset the client id to the one that is input'|'+++'
setup|query|Query()
query.set_by_pos(12, 15, 'AT')|'Creating a query and should return true'|
human.test(query)|'this should return true because the query is normal i.e., abides all rules'|True
setup|query_memory_nucleotides|Query()
query_memory_nucleotides.set_marker('marker5', 23, 15)|'creating a query at with a marker'|
query_memory_nucleotides.set_by_marker('marker5', 'A1')|'creating a query with memory nucleotides in it'|
human.test(query_memory_nucleotides)|'there is no chromosome at marker, therefore this should be approved'|True
setup|query_rejected|Query()
query_rejected.set_by_pos(12, 1, 'G2')|'making a query that would get rejected'|
human.test(query)|'this should be rejected because the chromosomes do not match'|False
setup|binder|Binder()
binder.set_sex('M')|'sets the gender to be Male'|
binder.set_by_pos(12, 45, 'LM')|'checking if the inhertiance is properly set; this should set the chromosome at 12-45 to be LM'|
setup|child|human.procreate(human_2, binder)|'this should return a child with a chromosome that is mapped at the parents nucleotide'|Human()


setup|woman|Female('***')
setup|man|Male('-/-/-')
woman.set_by_pos(12, 1, 'AT')|'if the inheritance is proper, then this setter method should work properly'|
woman.get_by_pos(12, 1)|'checking the setter method using the getter method, lol'|'AT'
woman.set_marker('marker1', 3, 8)|'this should link the marker to the chromosome at 3-8'|
woman.set_by_marker('marker1', 'Bii')|'setting the marker to be equal to a chromosome'|
woman.get_by_marker('marker1')|'If the setter did its work, the getter should be getting'|'Bii'
woman.get_pairs_dict()|'this should have 2 sets of dictionaries: 12-1, 3-8'|{12: {1: ['A', 'T']}, 3: {8: ['B', 'i', 'i']}}
woman.get_markers_dict()|'this should have only one marker which should be mapped to the same chromosome as 3-8'|{'marker1': ['B', 'i', 'i']}
woman.set_marker('marker2', 12, 1)|'linking the marker to 12-1 such that changing either one of them would change the chromosome at both ends'|
woman.set_by_marker('marker2', 'Hii')|'12-1 has a chromosome set at it; can this setter method change the chromosome?'|
woman.get_by_marker('marker2')|'will this return hii? It should if the setter method worked fine'|'Hii'
woman.get_pairs_dict()|'the pair dict should have been altered by the previous functions'|{12: {1: ['H', 'i', 'i']}, 3: {8: ['B', 'i', 'i']}}
woman.get_markers_dict()|'the marker dict should have been altered'|{'marker1': ['B', 'i', 'i'], 'marker2':['H', 'i', 'i']}
woman.get_client_id()|'this should return the client id'|'***'
woman.set_client_id('+++')|'this should reset the client id to the one that is input'|'+++'

setup|query|Query()
query.set_by_pos(12, 15, 'AT')|'Creating a query and should return true'|
woman.test(query)|'this should return true because the query is normal i.e., abides all rules'|True
setup|query_memory_nucleotides|Query()
query_memory_nucleotides.set_marker('marker5', 23, 15)|'creating a query at with a marker'|
query_memory_nucleotides.set_by_marker('marker5', 'A1')|'creating a query with memory nucleotides in it'|
woman.test(query_memory_nucleotides)|'there is no chromosome at marker5, therefore this should be approved'|True
setup|query_rejected|Query()
query_rejected.set_by_pos(12, 1, 'G2')|'making a query that would get rejected'|
woman.test(query)|'this should be rejected because the chromosomes do not match'|False

man.set_by_pos(12, 1, 'AT')|'if the inheritance is proper, then this setter method should work properly'|
man.get_by_pos(12, 1)|'checking the setter method using the getter method, lol'|'AT'
man.set_marker('marker1', 3, 8)|'this should link the marker to the chromosome at 3-8'|
man.set_by_marker('marker1', 'Bii')|'setting the marker to be equal to a chromosome'|
man.get_by_marker('marker1')|'If the setter did its work, the getter should be getting'|'Bii'
man.get_pairs_dict()|'this should have 2 sets of dictionaries: 12-1, 3-8'|{12: {1: ['A', 'T']}, 3: {8: ['B', 'i', 'i']}}
man.get_markers_dict()|'this should have only one marker which should be mapped to the same chromosome as 3-8'|{'marker1': ['B', 'i', 'i']}
man.set_marker('marker2', 12, 1)|'linking the marker to 12-1 such that changing either one of them would change the chromosome at both ends'|
man.set_by_marker('marker2', 'Hii')|'12-1 has a chromosome set at it; can this setter method change the chromosome?'|
man.get_by_marker('marker2')|'will this return hii? It should if the setter method worked fine'|'Hii'
man.get_pairs_dict()|'the pair dict should have been altered by the previous functions'|{12: {1: ['H', 'i', 'i']}, 3: {8: ['B', 'i', 'i']}}
man.get_markers_dict()|'the marker dict should have been altered'|{'marker1': ['B', 'i', 'i'], 'marker2':['H', 'i', 'i']}
man.get_client_id()|'this should return the client id'|'***'
man.set_client_id('+++')|'this should reset the client id to the one that is input'|'+++'

setup|query|Query()
query.set_by_pos(12, 15, 'AT')|'Creating a query and should return true'|
man.test(query)|'this should return true because the query is normal i.e., abides all rules'|True
setup|query_memory_nucleotides|Query()
query_memory_nucleotides.set_marker('marker5', 23, 15)|'creating a query at with a marker'|
query_memory_nucleotides.set_by_marker('marker5', 'A1')|'creating a query with memory nucleotides in it'|
man.test(query_memory_nucleotides)|'there is no chromosome at marker, therefore this should be rejected'|False
setup|query_rejected|Query()
query_rejected.set_by_pos(12, 1, 'G2')|'making a query that would get rejected'|
man.test(query)|'this should be rejected because the chromosomes do not match'|False

setup|binder|Binder()
binder.set_sex('F')|'sets the gender to be Female'|
binder.set_by_pos(12, 45, 'LM')|'checking if the inhertiance is properly set; this should set the chromosome at 12-45 to be LM'|
setup|child|woman.procreate(male, binder)|'this should return a child with a chromosome that is mapped at the parents nucleotide'|Human()